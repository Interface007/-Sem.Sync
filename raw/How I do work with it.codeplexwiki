!! Address Synchronization
I’m synchronizing contacts from the various networks to my Outlook and the corporate Exchange server by first exporting them into the file system using the connector “[StdContact] Filesystem one Xml per contact” with the template “Template Syncronize”. While this export I’m matching the contacts to the already exported data, so that I will have no duplicates. Then I’m importing from this file system connector to “[StdContact] Microsoft Outlook 2010” and “[StdContact] Microsoft Exchange Web Services via Managed API” to update my address books.
!! Address normalization
By exporting the contacts into the target “[StdContact] Microsoft Excel OpenXml” I have a very handy tool to process a list of addresses (sorting, copying and correcting data). Then I’m simply syncing back the data into Outlook and Exchange as described in “Address Synchronization“.
!! Reading connections between contacts
The template “Template Get Contact Relations” uses a connector interface to read some more information about the contacts “friends”. The implementations of my connectors do only read the IDs of the “friends” and perform a lookup in the already existing contacts for matching entries – so you will not get all “friends”, but only those you are connected to, too (otherwise we would blow up the contact information with each additional run and end up exporting really all data from the sources).
!! Analyzing the data
The connector “[StdContact] DGML Graph” allows having a look for the connection between the contacts (after getting the connection by using the template “Template Get Contact Relations”). By copying data to this connector you will create a dgml-file that can directly opened in Visual Studio 2010 (“Professional” and better).
